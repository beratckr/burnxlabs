---
import { languages, type Language } from '../i18n/config';
import { getLangFromUrl } from '../i18n/utils';

const currentLang = getLangFromUrl(Astro.url);
const currentPath = Astro.url.pathname;
const segments = currentPath.split('/').filter(Boolean);
const pathWithoutLang = '/' + segments.slice(1).join('/');

// Function to get the alternate language URL
function getAlternateUrl(lang: Language): string {
    return `/${lang}${pathWithoutLang || '/'}`;
}
---

<div class="language-switcher flex items-center space-x-3">
    {Object.keys(languages).map((lang) => (
        <a 
            href={getAlternateUrl(lang as Language)}
            class={`text-sm font-medium transition-colors ${
                lang === currentLang 
                    ? 'text-gray-900 pointer-events-none' 
                    : 'text-gray-500 hover:text-gray-900'
            }`}
            aria-current={lang === currentLang ? 'page' : undefined}
            onclick={lang !== currentLang ? `document.cookie='lang=${lang}; path=/; max-age=${60*60*24*365}'; localStorage.setItem('preferredLanguage', '${lang}');` : undefined}
        >
            {lang.toUpperCase()}
        </a>
    ))}
</div>

<style>
    .language-switcher {
        position: relative;
    }
    
    .language-switcher a:not(:last-child)::after {
        content: '|';
        position: absolute;
        right: -0.625rem;
        color: #d1d5db;
        pointer-events: none;
    }
</style>